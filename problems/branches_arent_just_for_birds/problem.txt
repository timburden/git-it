  Create a new branch for your contribution.

  --------------------------------------------------------------------


  Git repositories use branches to isolate work when needed. It's 
  common practice when working on a project or with others on a 
  project to create a {bold}branch{/bold} to put your changes in. This 
  way you can do you work while the main, commonly named 'master', 
  branch stays stable.
  
  {cyan}GitHub Pages{/cyan}
  
  GitHub.com will automatically serve and host static website files in 
  branches named 'gh-pages'. Since the project you forked creates a 
  website, its main branch is 'gh-pages'. All sites like this can be 
  found using this pattern for the URL: 
  
  http://githubusername.github.io/repositoryname
  
  {bold}{cyan}
  Create a branch{/bold}
  ---------------{/cyan}

  When you create a branch, Git copies everything from the current 
  branch you're on and places it in the branch you've requested.
  
  Type `git status` to see what branch you're currently on (it
  should be 'gh-pages')
  
  Create a branch and name it "add-<username>", where 'username' is 
  your username. For instance, "add-jlord". 

  $ git branch <BRANCHNAME>
  
  Now you have a branch with a new name identical to 'gh-pages'.
  
  To go into that branch and work on it, similar to using `cd` to 
  change directory in terminal, you {bold}checkout{/bold} a branch.

  $ git checkout <BRANCHNAME>
  
  {bold}{cyan}
  Create a new file{/bold}
  --------------------------{/cyan}
  
  Back to the text editor. In the 'contributors' folder, create a 
  new file named "add-<username>.txt", where 'username' is your 
  username. For instance, "add-jlord.txt". Then, just write your 
  GitHub username in it, that's it and that's all. For instance, 
  I'd type 'jlord' and hit save.  
  
  {bold}{cyan}
  Check-in{/bold}
  --------{/cyan}
  
  Go through the steps for checking in a project: 
  
  $ git status
  $ git add <filename>
  $ git commit -m "commit message"
  
  Now push your update to your fork on GitHub:
  
  $ git push origin <BRANCHNAME>
  
  Type `git-it verify` when you're done.
  
  
  {cyan}
  **GIT TIPS**
  ------------

  You can create and switch to a branch in one line:

  $ git checkout -b <BRANCHNAME>
  
  Create a new branch:

  $ git branch <BRANCHNAME>
  
  Move onto a branch:

  $ git checkout <BRANCHNAME>
  
  List the branches:

  $ git branch

  Rename a branch you're currently on:
  
  $ git branch -m <NEWBRANCHNAME>

  Verify what branch you're working on

  $ git status{/cyan}

  --------------------------------------------------------------------
